name: CI / Release

on:
  push:
    branches:
      - main
      - "releases/**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: CI (lint → build → test → package)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run compile

      - name: Prepare sample and test data
        if: always()
        run: bash scripts/setup-test-data.sh

      - name: Create artifacts dir
        if: always()
        run: mkdir -p artifacts/test-results

      - name: Test (run vscode tests)
        run: |
          set -e
          xvfb-run -a npm test
          xvfb-run -a npm run test:junit
        continue-on-error: true
      - name: Generate Coverage Report
        if: always()
        run: xvfb-run -a npm run test:coverage
        continue-on-error: true

      - name: Upload Coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-vsplot
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: artifacts/test-results/**/*.xml

      - name: Package VSIX (artifact)
        run: |
          npx vsce package --no-dependencies || npx vsce package --yarn=false --no-dependencies
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: "*.vsix"

  publish:
    name: Publish (Marketplace)
    needs: ci
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (for vsce)
        run: npm ci

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix
          path: .

      - name: Publish to Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          VSIX_FILE=$(ls *.vsix | head -n1 || true)
          if [ -n "$VSIX_FILE" ]; then
            npx vsce publish --packagePath "$VSIX_FILE" -p "$VSCE_PAT"
          else
            npx vsce publish -p "$VSCE_PAT"
          fi
